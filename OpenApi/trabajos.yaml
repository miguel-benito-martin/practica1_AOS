openapi: "3.0.3"
info:
  title: "Subsistema 3: gestión de trabajos de un taller"
  version: "1.0.0"
  description: "Asignatura AOS: grupo 1"
  license:
    name: AOSGrupo1
    url: 'https://github.com/miguel-benito-martin/practica1_AOS'
  contact:
    name: Arquitecturas Orientadas a Servicios
    url: 'https://moodle.upm.es/titulaciones/oficiales/mod/assign/view.php?id=1320916'
    email: alberto.romartin@alumnos.upm.es
servers:
  - url: '{schema}://{server}:{port}/{basePath}'
    description: Servidor local
    variables:
      schema:
        description: Esquema
        default: http
        enum:
          - http
          - https
      server:
        description: Nombre del servidor
        default: 127.0.0.1
      port:
        description: Número de puerto
        default: '80'
      basePath:
        description: Ruta base
        default: api/v1
tags:
  - name: 'Trabajo'
    description: Trabajos de los usuarios
paths:
  /trabajo:
    get:
      tags:
        - 'Trabajo'
      summary: Obtiene todos los trabajos de mantenimiento que se realizan sobre un vehículo
      operationId: grupo_1_AOS_get
      responses:
        200:
          description: Array de trabajos
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                type: object
                properties:
                  trabajos:
                    description: array de trabajos
                    type: array
                    items:
                      $ref: '#/components/schemas/Trabajo'
              examples:
                trabajosExamples:
                  $ref: '#/components/examples/trabajos'
        404:
          $ref: '#/components/responses/Response_404'
    post:
      tags:
        - 'Trabajo'
      summary: Crea un nuevo trabajo
      description: Genera un nuevo trabajo de mantenimiento para un determinado vehículo
      operationId: grupo_1_AOS_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - descripcion
              properties:
                nombre:
                  description: Nombre del tipo de trabajo
                  type: string
                  format: string
                descripcion:
                  description: Descripción del trabajo
                  type: string
                  format: string
              example:
                nombre: "Cambio de agua"
                descripcion: "Cambio de agua cada 500km"
      responses:
        201:
          description: Trabajo creado
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trabajo'
        '413':
          $ref: '#/components/responses/Response_413'
        422:
          $ref: '#/components/responses/Response_422'
        '414':
          $ref: '#/components/responses/Response_414'
    options:
      tags:
        - 'Trabajo'
      summary: Proporciona la lista de los métodos HTTP soportados
      description: Devuelve una cabecera `Allow` con la lista de métodos HTTP soportados (separados por comas).
      operationId: grupo_1_AOS_options
      responses:
        '204':
          description: 'cabecera `Allow` &lt;El cuerpo de la respuesta está vacío&gt;'
          headers:
            Allow:
              $ref: '#/components/headers/Allow'

  /trabajo/findByEstadoTrabajo:
    get:
      tags:
        - "Trabajo"
      summary: "Buscar trabajo por estado"
      description: "Buscar trabajos por su estado actual"
      operationId: findTrabajoByEstado
      parameters:
        - $ref: '#/components/parameters/estadoTrabajo'
      responses:
        200:
          description: Array de trabajos
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                type: object
                properties:
                  trabajos:
                    description: array de trabajos
                    type: array
                    items:
                      $ref: '#/components/schemas/Trabajo'
              examples:
                trabajosExamples:
                  $ref: '#/components/examples/trabajos'
        "400":
          description: "Invalid status value"

  /trabajo/findByCliente:
    get:
      tags:
        - "Trabajo"
      summary: "Buscar trabajo por cliente"
      description: "Buscar trabajos por el cliente que lo ha encargado"
      operationId: findTrabajoByCliente
      parameters:
        - $ref: '#/components/parameters/idCliente'
      responses:
        200:
          description: Array de trabajos
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                type: object
                properties:
                  trabajos:
                    description: array de trabajos
                    type: array
                    items:
                      $ref: '#/components/schemas/Trabajo'
              examples:
                trabajosExamples:
                  $ref: '#/components/examples/trabajos'
        "400":
          description: "Invalid status value"
        '404':
          $ref: '#/components/responses/Response_404'

  /trabajo/findByVehiculo:
    get:
      tags:
        - "Trabajo"
      summary: "Buscar trabajo por identificador vehiculo"
      description: "Buscar trabajos por el vehículo del cliente que lo ha encargado"
      operationId: findTrabajoByVehiculo
      parameters:
        - $ref: '#/components/parameters/idVehiculo'
      responses:
        200:
          description: Array de trabajos
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                type: object
                properties:
                  trabajos:
                    description: array de trabajos
                    type: array
                    items:
                      $ref: '#/components/schemas/Trabajo'
              examples:
                trabajosExamples:
                  $ref: '#/components/examples/trabajos'
        "400":
          description: "Invalid status value"
        '404':
          $ref: '#/components/responses/Response_404'

  /trabajo/{trabajoId}:
    parameters:
      - $ref: '#/components/parameters/trabajoId'
    get:
      tags:
        - 'Trabajo'
      summary: Buscar un trabajo por su ID
      description: Devuelve el trabajo especificado por `trabajoId`
      operationId: grupo_1_AOS_getId
      responses:
        '200':
          description: Comanda
          headers:
            ETag:
              $ref: '#/components/headers/ETag'  #lo hacen ruth y paz
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trabajo'
              examples:
                trabajosExamples:
                  $ref: '#/components/examples/trabajos'
        '404':
          $ref: '#/components/responses/Response_404'
    delete:
      tags:
        - 'Trabajo'
      summary: Elimina un trabajo
      description: Elimina un trabajo identificada por `trabajoId`.
      operationId: grupo_1_AOS_delete
      responses:
        '204':
          description: Trabajo eliminado &lt;Cuerpo de la respuesta vacío&gt;
        '404':
          $ref: '#/components/responses/Response_404'
    put:
      tags:
        - 'Trabajo'
      summary: Modifica un trabajo
      description: Actualiza los datos de un trabajo por un trabajoId
      operationId: grupo_1_AOS_put
      parameters:
        - $ref: '#/components/parameters/ifMatchParam'
      requestBody:
        $ref: '#/components/requestBodies/trabajoRB'
      responses:
        '200':
          description: 'Todo OK: trabajo modificado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trabajo'
        '404':
          $ref: '#/components/responses/Response_404'
        '412':
          $ref: '#/components/responses/Response_412'
        '413':
          $ref: '#/components/responses/Response_413'
        '414':
          $ref: '#/components/responses/Response_414'

components:
  schemas:
    Trabajo:
      $ref: './schemas/trabajo.yaml#/Trabajo'
    HTTP_Problems:
      $ref: './schemas/HTTP_Problems.yaml#/HTTP_Problem'

  headers:
    ETag:
      description: Entity Tag (identificador único proporcionado para validación de caché)
      schema:
        type: string
        pattern: "[0-9a-f]*"
        # https://github.com/marak/Faker.js#api-methods
        x-faker: random.uuid
        example:
          32b64ff851405fdd
    Location:
      description: '`URI` del nuevo recurso'
      schema:
        type: string
        format: url
        x-faker: internet.url
    Allow:
      description: Lista de métodos HTTP soportados
      schema:
        type: string
      example:
        GET,POST,DELETE,PUT,OPTIONS

  parameters:
    trabajoId:
      name: trabajoId
      in: path
      description: ID del trabajo
      required: true
      schema:
        type: integer
        pattern: ^\d+$
    ifMatchParam:
      name: If-Match
      in: header
      description: ETag del recurso que se desea modificar
      required: true
      schema:
        type: string
        pattern: "[0-9a-f]*"
    estadoTrabajo:
      name: estadoTrabajo
      in: query
      description: Elegir tipo de trabajo para su búsqueda
      required: true
      schema:
        type: string
        enum:
          - "Creado"
          - "Planificado"
          - "Iniciado"
          - "Terminado"
        default: "Creado"
    idCliente:
      name: idCliente
      in: path
      description: Id del cliente
      required: true
      schema:
        type: integer
        pattern: ^\d+$
    idVehiculo:
      name: idVehiculo
      in: path
      description: Id del vehiculo
      required: true
      schema:
        type: integer
        pattern: ^\d+$


  requestBodies:
    trabajoRB:
      description: '`Trabajo` data'
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - nombre
              - descripcion
              - estadoTrabajo
            properties:
              nombre:
                description: Nombre del tipo de trabajo
                type: string
              descripcion:
                description: Descripción del trabajo
                type: string
              estadoTrabajo:
                description: Posibles estados del trabajo [Creado, Planificado, Iniciado, Terminado]
                type: string
                enum: [ Creado, Planificado, Iniciado, Terminado ]
            example:
              nombre: Reparación de frenos
              descripcion: Reparación del freno derecho
              estadoTrabajo: Creado

  responses:
    Response_404:
      description: 'NOT FOUND: recurso no disponible'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problems'
          examples:
            response-http-404:
              $ref: '#/components/examples/response-http-404'
    Response_412:
      description: 'PRECONDITION FAILED: no se cumple alguna condición previa'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problems'
          examples:
            response-http-412:
              $ref: '#/components/examples/response-http-412'
    Response_413:
      description: 'PAYLOAD TOO LARGE: el dato es demasiado grande'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problems'
          examples:
            response-http-412:
              $ref: '#/components/examples/response-http-413'
    Response_414:
      description: 'REQUEST-URI TOO LONG: la URI es demasiado larga'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problems'
          examples:
            response-http-412:
              $ref: '#/components/examples/response-http-414'
    Response_422:
      description: 'UNPROCESSABLE ENTITY: falta algún dato'
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problems'
          examples:
            response-http-422:
              $ref: '#/components/examples/response-http-422'

  examples:
    trabajos:
      value:
        - trabajoId: 1234
          idVehiculo: 98765
          idCliente: 14
          nombre: Cambio de aceite
          descripcion: Cambio de aceite cada 5000km
          estadoTrabajo: Iniciado
          fechaInicio: '2021-01-30T08:30:00Z'
          fechaFin: null
        - trabajoId: 9876
          idVehiculo: 12345
          idCliente: 110
          nombre: Cambio de motor
          descripcion: Cambio de motor cada 90000km
          estadoTrabajo: Planificado
          fechaInicio: '2021-04-20T08:30:00Z'
          fechaFin: null
    response-http-404:
      value:
        type: https://httpstatuses.com/404
        title: NOT FOUND
        status: 404
        detail: El recurso solicitado no está disponible...
        instance: about:blank
    response-http-412:
      value:
        type: https://httpstatuses.com/412
        title: PRECONDITION FAILED
        status: 412
        detail: Ha fallado alguna precondición
        instance: about:blank
    response-http-413:
      value:
        type: https://httpstatuses.com/413
        title: PAYLOAD TOO LARGE
        status: 413
        detail: Tamaño del dato demasiado grande
        instance: about:blank
    response-http-414:
      value:
        type: https://httpstatuses.com/414
        title: REQUEST-URI TOO LONG
        status: 414
        detail: Tamaño del URI demasiado grande
        instance: about:blank
    response-http-422:
      value:
        type: https://httpstatuses.com/422
        title: UNPROCESSABLE ENTITY
        status: 422
        detail: Fallo semántico
        instance: about:blank